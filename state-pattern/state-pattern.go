package state_pattern

//是一种基于有限状态机制的设计模式。在这种设计模式中，行为是由相应的状态来决定的。接下来我们会用一个售卖机的例子来说明下状态模式。为了便于说明，我们把场景简化一下，假设有一台售卖机只卖一种商品，且只有如下四种状态：
//
//有商品
//无商品
//商品请求中
//已收款
//一台售卖机也应该会有多种功能，我们同样做一下简化，假设这台售卖机只有四个功能：
//
//选择商品
//补充商品
//投币
//吐出商品

//在一个对象有多种不同状态的时候。对象需要根据当前的请求来改变它的状态
//在前面提到的例子中，售卖机将会受到行为的影响从一种状态切换到另一种状态。比如，当“投币”行为结束后，售货机将会从“商品请求中”状态切换到“已收款”状态。
//在一个对象需要根据它当前的状态对同一个请求做出不同响应的时候。这个时候使用状态模式可以避免大量的条件声明。
//仍然以售卖机为例，当用户想购买商品时，如果售卖机的状态为“有商品”，它就会继续处理，如果售卖机状态为“无商品”，它就会拒绝处理。请注意，这里售卖机根据它“有商品”和“无商品”的状态，对购买商品的请求作出了两种不同的响应。
